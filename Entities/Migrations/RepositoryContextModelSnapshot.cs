// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Entities.Models.Card", b =>
                {
                    b.Property<Guid>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("Entities.Models.Reading", b =>
                {
                    b.Property<Guid>("ReadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReadingType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReadingId");

                    b.ToTable("Reading");
                });

            modelBuilder.Entity("Entities.Models.ReadingCard", b =>
                {
                    b.Property<Guid>("ReadingCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CardReadingReadingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReadCardCardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReadingCardId");

                    b.HasIndex("CardReadingReadingId");

                    b.HasIndex("ReadCardCardId");

                    b.ToTable("ReadingCard");
                });

            modelBuilder.Entity("Entities.Models.ReadingCard", b =>
                {
                    b.HasOne("Entities.Models.Reading", "CardReading")
                        .WithMany("ReadingCards")
                        .HasForeignKey("CardReadingReadingId");

                    b.HasOne("Entities.Models.Card", "ReadCard")
                        .WithMany()
                        .HasForeignKey("ReadCardCardId");
                });
#pragma warning restore 612, 618
        }
    }
}
